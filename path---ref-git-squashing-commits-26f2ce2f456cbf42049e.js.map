{"version":3,"sources":["webpack:///path---ref-git-squashing-commits-26f2ce2f456cbf42049e.js","webpack:///./.cache/json/ref-git-squashing-commits.json"],"names":["webpackJsonp","501","module","exports","data","markdownRemark","html","frontmatter","title","date","author","fields","path","slug","site","siteMetadata","pathContext","layout","_PARENT"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,2yNAAokHC,aAAo7GC,MAAA,wBAAAC,KAAA,oBAAAC,OAAA,MAAyEC,QAAWC,KAAA,+BAAAC,KAAA,gCAA4EC,MAASC,cAAgBP,MAAA,iBAAwBQ,aAAgBH,KAAA,8BAAAI,OAAA,iBAAAC,QAAA","file":"path---ref-git-squashing-commits-26f2ce2f456cbf42049e.js","sourcesContent":["webpackJsonp([59798392746605],{\n\n/***/ 501:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"squashing-git-commits\\\"><a href=\\\"#squashing-git-commits\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Squashing Git Commits</h2>\\n<h2 id=\\\"the-easy-and-flexible-way\\\"><a href=\\\"#the-easy-and-flexible-way\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The easy and flexible way</h2>\\n<p>This method avoids merge conflicts if you have periodically pulled master into your branch. It also gives you the opportunity to squash into more than 1 commit, or to re-arrange your code into completely different commits (e.g. if you ended up working on three different features but the commits were not consecutive).</p>\\n<p><strong><em>Note: You cannot use this method if you intend to open a pull request to merge your feature branch.</em> This method requires committing directly to master.</strong></p>\\n<p>Switch to the master branch and make sure you are up to date:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git checkout master && git pull</code></pre>\\n      </div>\\n<p>Merge your feature branch into the master branch locally:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git merge feature_branch</code></pre>\\n      </div>\\n<p>Reset the local master branch to origin's state:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git reset origin/master</code></pre>\\n      </div>\\n<p>Now all of your changes are considered as unstaged changed. You can stage and commit them into one or more commits.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git add . --all\\ngit commit</code></pre>\\n      </div>\\n<h2 id=\\\"the-harder-and-less-flexible-way\\\"><a href=\\\"#the-harder-and-less-flexible-way\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The hard(er) and less flexible way</h2>\\n<p>This method only allows you to squash the last X consecutive commits into a single commit. Also, if you have merged master into your branch along the way, you will have to manually merge your new (squashed) commit into master and resolve the merge conflicts.</p>\\n<p>Use this method if you have not merged master into your branch, you plan to combine all commits into one, and you only changed one feature of the project; or, regardless of those conditions, you must use this method if you intend to open a pull request to merge your code.</p>\\n<h3 id=\\\"combining-the-commits\\\"><a href=\\\"#combining-the-commits\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Combining the commits</h3>\\n<p>To squash the last <strong>3</strong> commits into one:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git reset --soft HEAD~3\\ngit commit -m \\\"New message for the combined commit\\\"</code></pre>\\n      </div>\\n<h3 id=\\\"pushing-the-squashed-commit\\\"><a href=\\\"#pushing-the-squashed-commit\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Pushing the squashed commit</h3>\\n<h4 id=\\\"if-the-commits-have-been-pushed-to-the-remote\\\"><a href=\\\"#if-the-commits-have-been-pushed-to-the-remote\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>If the commits <strong>have</strong> been pushed to the remote:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git push origin +name-of-branch</code></pre>\\n      </div>\\n<p><em>The plus sign forces the remote branch to accept your rewritten history, otherwise you will end up with divergent branches</em></p>\\n<h4 id=\\\"if-the-commits-have-not-yet-been-pushed-to-the-remote\\\"><a href=\\\"#if-the-commits-have-not-yet-been-pushed-to-the-remote\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>If the commits have <strong>NOT</strong> yet been pushed to the remote:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git push origin name-of-branch</code></pre>\\n      </div>\\n<p>In other words, just a normal push like any other</p>\",\"frontmatter\":{\"title\":\"Squashing Git Commits\",\"date\":\"February 02, 2018\",\"author\":null},\"fields\":{\"path\":\"ref/git/squashing-commits.md\",\"slug\":\"/ref/git/squashing-commits/\"}},\"site\":{\"siteMetadata\":{\"title\":\"HeadForCode\"}}},\"pathContext\":{\"slug\":\"/ref/git/squashing-commits/\",\"layout\":\"sidebar-layout\",\"_PARENT\":\"SOURCE\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---ref-git-squashing-commits-26f2ce2f456cbf42049e.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"squashing-git-commits\\\"><a href=\\\"#squashing-git-commits\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Squashing Git Commits</h2>\\n<h2 id=\\\"the-easy-and-flexible-way\\\"><a href=\\\"#the-easy-and-flexible-way\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The easy and flexible way</h2>\\n<p>This method avoids merge conflicts if you have periodically pulled master into your branch. It also gives you the opportunity to squash into more than 1 commit, or to re-arrange your code into completely different commits (e.g. if you ended up working on three different features but the commits were not consecutive).</p>\\n<p><strong><em>Note: You cannot use this method if you intend to open a pull request to merge your feature branch.</em> This method requires committing directly to master.</strong></p>\\n<p>Switch to the master branch and make sure you are up to date:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git checkout master && git pull</code></pre>\\n      </div>\\n<p>Merge your feature branch into the master branch locally:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git merge feature_branch</code></pre>\\n      </div>\\n<p>Reset the local master branch to origin's state:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git reset origin/master</code></pre>\\n      </div>\\n<p>Now all of your changes are considered as unstaged changed. You can stage and commit them into one or more commits.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git add . --all\\ngit commit</code></pre>\\n      </div>\\n<h2 id=\\\"the-harder-and-less-flexible-way\\\"><a href=\\\"#the-harder-and-less-flexible-way\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>The hard(er) and less flexible way</h2>\\n<p>This method only allows you to squash the last X consecutive commits into a single commit. Also, if you have merged master into your branch along the way, you will have to manually merge your new (squashed) commit into master and resolve the merge conflicts.</p>\\n<p>Use this method if you have not merged master into your branch, you plan to combine all commits into one, and you only changed one feature of the project; or, regardless of those conditions, you must use this method if you intend to open a pull request to merge your code.</p>\\n<h3 id=\\\"combining-the-commits\\\"><a href=\\\"#combining-the-commits\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Combining the commits</h3>\\n<p>To squash the last <strong>3</strong> commits into one:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git reset --soft HEAD~3\\ngit commit -m \\\"New message for the combined commit\\\"</code></pre>\\n      </div>\\n<h3 id=\\\"pushing-the-squashed-commit\\\"><a href=\\\"#pushing-the-squashed-commit\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Pushing the squashed commit</h3>\\n<h4 id=\\\"if-the-commits-have-been-pushed-to-the-remote\\\"><a href=\\\"#if-the-commits-have-been-pushed-to-the-remote\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>If the commits <strong>have</strong> been pushed to the remote:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git push origin +name-of-branch</code></pre>\\n      </div>\\n<p><em>The plus sign forces the remote branch to accept your rewritten history, otherwise you will end up with divergent branches</em></p>\\n<h4 id=\\\"if-the-commits-have-not-yet-been-pushed-to-the-remote\\\"><a href=\\\"#if-the-commits-have-not-yet-been-pushed-to-the-remote\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>If the commits have <strong>NOT</strong> yet been pushed to the remote:</h4>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-sh\\\"><code>git push origin name-of-branch</code></pre>\\n      </div>\\n<p>In other words, just a normal push like any other</p>\",\"frontmatter\":{\"title\":\"Squashing Git Commits\",\"date\":\"February 02, 2018\",\"author\":null},\"fields\":{\"path\":\"ref/git/squashing-commits.md\",\"slug\":\"/ref/git/squashing-commits/\"}},\"site\":{\"siteMetadata\":{\"title\":\"HeadForCode\"}}},\"pathContext\":{\"slug\":\"/ref/git/squashing-commits/\",\"layout\":\"sidebar-layout\",\"_PARENT\":\"SOURCE\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/ref-git-squashing-commits.json\n// module id = 501\n// module chunks = 59798392746605"],"sourceRoot":""}